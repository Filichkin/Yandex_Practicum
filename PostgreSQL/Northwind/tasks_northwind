1. Выведите на экран всю информацию из таблицы с заказами.

SELECT *
FROM northwind.orders;

2. Выведите на экран два поля из таблицы покупателей: название компании-заказчика и её город расположения.

SELECT customers.company_name,
       customers.city
FROM northwind.customers;

3. Выведите на экран первые пять записей из таблицы с сотрудниками.

SELECT *
FROM northwind.employees
LIMIT 5;

4. Выведите на экран первые двадцать записей из таблицы с заказами.

SELECT *
FROM northwind.orders
LIMIT 20;

5. Выведите на экран названия и адреса компаний-заказчиков, которые находятся во Франции (англ. France).

SELECT customers.company_name,
       customers.address
FROM northwind.customers
WHERE customers.country='France';

6. Выведите на экран имена и фамилии всех сотрудников из Лондона (англ. London).

SELECT first_name,
       last_name
FROM northwind.employees
WHERE city='London';

7. Выведите на экран имена и фамилии сотрудников из Лондона (англ. London), чей домашний номер телефона заканчивается на 8.

SELECT first_name,
       last_name
FROM northwind.employees
WHERE home_phone LIKE '%8';

8. Выведите на экран список уникальных названий городов, начинающихся на San, в которых оформили хотя бы один заказ после 16 июля 1996 года. Отсортируйте таблицу в лексикографическом порядке по убыванию.


SELECT DISTINCT ship_city
FROM northwind.orders
WHERE ship_city LIKE 'San%'
  AND CAST(order_date AS date)>'1996-07-16'
ORDER BY ship_city DESC;

9. Выведите всю информацию о сотрудниках, отсортировав записи в порядке убывания их даты рождения.

SELECT *
FROM northwind.employees
ORDER BY CAST(birth_date AS date) DESC;

10. Выведите всю информацию из первых 100 записей таблицы заказов, отсортированных по стране доставки в лексикографическом порядке по возрастанию.

SELECT *
FROM northwind.orders
ORDER BY ship_country
LIMIT 100;

11. Используя таблицу с заказами, выведите количество уникальных идентификаторов клиентов (поле customer_id), которые совершили хотя бы один заказ.

SELECT COUNT(DISTINCT orders.customer_id)
FROM northwind.orders

12. Для всех товаров, у которых указан поставщик, выведите пары с названием товара и названием компании-поставщика этого товара.

SELECT products.product_name,
       suppliers.company_name
FROM northwind.products
LEFT JOIN northwind.suppliers ON products.supplier_id=suppliers.supplier_id;

13. Выведите среднюю цену товаров каждой категории из таблицы products. Округлите среднее до двух знаков после запятой. 

SELECT products.category_id,
       ROUND(CAST(AVG(products.unit_price) AS numeric), 2)
FROM northwind.products
GROUP BY products.category_id

14. Выведите уникальные названия всех стран, в которые было отправлено более 10 заказов. Отсортируйте вывод по названию страны в лексикографическом порядке по убыванию.

SELECT ship_country
FROM northwind.orders
GROUP BY ship_country
HAVING COUNT(order_id) > 10
ORDER BY ship_country DESC;

15. Отберите страны, в которых оформили больше 30 заказов, и выведите количество заказов в этих странах. Результаты отсортируйте по названию страны в лексикографическом порядке. 

SELECT ship_country,
       COUNT(order_id)
FROM northwind.orders
GROUP BY ship_country
HAVING COUNT(order_id) > 30
ORDER BY ship_country;

16. Выведите на экран названия товаров с ценой выше среднего среди всех представленных позиций в таблице.

SELECT product_name
FROM northwind.products
WHERE unit_price >
    (SELECT AVG(unit_price)
     FROM northwind.products)
     
17. Выведите названия товаров с ценой ниже средней среди всех представленных товаров или равной ей.

SELECT product_name
FROM northwind.products
WHERE unit_price <=
      (SELECT AVG(unit_price)
       FROM northwind.products);
       
18. Выведите на экран идентификаторы заказов и для каждого из них — его суммарную стоимость с учётом всех товаров, включённых в заказ, и их количества, но без учёта скидки. Не округляйте получившиеся значения.

SELECT order_id,
       SUM(unit_price*quantity) 
FROM northwind.order_details
GROUP BY order_id;

19. Выведите на экран идентификаторы заказов и для каждого из них — суммарную стоимость заказа с учётом всех заказанных товаров и их количества с учётом скидки. Получившиеся значения округлите до ближайшего целого числа. Отсортируйте выдачу по возрастанию идентификаторов заказов.

SELECT order_id,
       ROUND(SUM(unit_price*quantity*(1-discount)))
FROM northwind.order_details
GROUP BY order_id
ORDER BY order_id

20. Выведите информацию о каждом товаре:
- его идентификатор из таблицы с товарами;
- его название из таблицы с товарами;
- название его категории из таблицы категорий;
- описание его категории из таблицы категорий.
Таблицу отсортируйте по возрастанию идентификаторов товаров.

SELECT products.product_id,
       products.product_name,
       categories.category_name,
       categories.description
FROM northwind.products
LEFT JOIN northwind.categories ON products.category_id=categories.category_id
ORDER BY products.product_id;

21. Для каждого месяца каждого года посчитайте уникальных пользователей, оформивших хотя бы один заказ в этот месяц. Значение месяца приведите к типу date.

SELECT DATE_TRUNC('month', order_date)::DATE,
       COUNT(DISTINCT customer_id)
FROM northwind.orders
GROUP BY DATE_TRUNC('month', order_date::DATE)

22. Для каждого года из таблицы заказов посчитайте суммарную выручку с продаж за этот год. Используйте детальную информацию о заказах. Не забудьте учесть скидку (поле discount) на товар. Результаты отсортируйте по убыванию значения выручки.

SELECT EXTRACT(YEAR
               FROM order_date::DATE),
       SUM(unit_price * quantity*(1-discount)) AS total_prise
FROM northwind.orders
LEFT JOIN northwind.order_details ON orders.order_id=order_details.order_id
GROUP BY EXTRACT(YEAR
                 FROM order_date::DATE)
ORDER BY total_prise DESC;

23. Выведите названия компаний-покупателей, которые совершили не менее двух заказов в 1996 году. Отсортируйте вывод по полю с названиями компаний в лексикографическом порядке по возрастанию.

SELECT company_name
FROM northwind.customers
WHERE customer_id IN
    (SELECT customer_id
     FROM northwind.orders
     WHERE EXTRACT(YEAR
                   FROM order_date::DATE)=1996
     GROUP BY customer_id
     HAVING COUNT(DISTINCT order_id) >= 2)
ORDER BY company_name

24. Выведите названия компаний-покупателей, которые совершили более пяти заказов в 1997 году. Отсортируйте вывод по полю с названиями компаний в лексикографическом порядке по убыванию.

SELECT company_name
FROM northwind.customers
WHERE customer_id IN
    (SELECT customer_id
     FROM northwind.orders
     WHERE EXTRACT(YEAR
                   FROM CAST(order_date AS date))=1997
     GROUP BY customer_id
     HAVING COUNT(order_id)>5)
ORDER BY company_name DESC;

25. Выведите среднее количество заказов компаний-покупателей за период с 1 января по 1 июля 1998 года. Округлите среднее до ближайшего целого числа. В расчётах учитывайте только те компании, которые совершили более семи покупок за всё время, а не только за указанный период.

SELECT ROUND(AVG(aver)) AS roun
FROM
  (SELECT COUNT(order_id) AS aver
   FROM northwind.orders
   WHERE CAST(order_date AS date) BETWEEN '1998-01-01' AND '1998-07-01'
     AND customer_id IN
       (SELECT customer_id
        FROM northwind.orders
        GROUP BY customer_id
        HAVING COUNT(order_id)>7)
   GROUP BY customer_id) subquery;

26. Выведите на экран названия компаний-покупателей, которые хотя бы раз оформили более одного заказа в день. Для подсчёта заказов используйте поле order_date. Отсортируйте названия компаний в лексикографическом порядке по возрастанию. 

WITH daily_orders AS
  (SELECT c.company_name,
          o.order_date,
          COUNT(o.order_id) AS num_orders
   FROM northwind.customers AS c
   LEFT JOIN northwind.orders AS o ON c.customer_id = o.customer_id
   GROUP BY c.company_name,
            o.order_date)
SELECT company_name
FROM daily_orders
WHERE num_orders > 1
GROUP BY company_name
ORDER BY company_name ASC;

27. Выведите города, в которые отправляли заказы не менее 10 раз. Названия городов отсортируйте в лексикографическом порядке по убыванию. 

SELECT ship_city
FROM northwind.orders
GROUP BY ship_city
HAVING COUNT(order_id)>=10
ORDER BY ship_city DESC;

28. Выведите города, в которые отправляли заказы не более 12 раз. Названия городов отсортируйте в лексикографическом порядке по возрастанию.

SELECT ship_city
FROM northwind.orders
GROUP BY ship_city
HAVING COUNT(order_id) <= 12
ORDER BY ship_city;

29. На сколько процентов ежемесячно менялось количество заказов в компании Northwind с 1 апреля по 1 декабря 1997 года? Отобразите таблицу со следующими полями:
номер месяца;
количество заказов в месяц;
процент, который показывает, насколько изменилось количество заказов в текущем месяце по сравнению с предыдущим.
Если заказов стало меньше, значение процента должно быть отрицательным, если больше — положительным. Округлите значение процента до двух знаков после запятой. Отсортируйте таблицу по возрастанию значения месяца. 
Напомним, что при делении одного целого числа на другое в PostgreSQL в результате получится целое число, округлённое до ближайшего целого вниз. Чтобы этого избежать, переведите делимое в тип numeric.


WITH monthly_orders AS
  (SELECT DATE_PART('month', o.order_date) AS month_num,
          COUNT(o.order_id) AS order_count
   FROM northwind.orders o
   WHERE o.order_date BETWEEN '1997-04-01' AND '1997-12-01'
   GROUP BY DATE_PART('month', o.order_date)
   ORDER BY month_num)
SELECT month_num,
       order_count,
       ROUND(CASE
                 WHEN prev_order_count = 0 THEN 0
                 ELSE (order_count - prev_order_count) * 100.0 / prev_order_count
             END, 2) AS percent_change
FROM
  (SELECT *,
          LAG(order_count, 1) OVER (
                                    ORDER BY month_num) AS prev_order_count
   FROM monthly_orders) t

30. На сколько процентов ежегодно менялось количество заказов в Northwind с 1996 по 1998 годы. Отобразите таблицу со следующими полями:
- Число года.
- Количество заказов за год.
- Процент, округлённый до целого числа, который показывает, насколько изменилось количество заказов в текущем году по сравнению с предыдущим. Для 1996 года выведите значение NULL.

WITH year_orders AS
  (SELECT DATE_PART('year', o.order_date) AS year_num,
          COUNT(o.order_id) AS order_count
   FROM northwind.orders o
   WHERE o.order_date BETWEEN '1996-01-01' AND '1998-12-31'
   GROUP BY DATE_PART('year', o.order_date)
   ORDER BY year_num)
SELECT year_num,
       order_count,
       ROUND(CASE
                 WHEN prev_order_count = 0 THEN 0
                 ELSE (order_count - prev_order_count) * 100.0 / prev_order_count
             END) AS percent_change
FROM
  (SELECT *,
          LAG(order_count, 1) OVER (ORDER BY year_num) AS prev_order_count
   FROM year_orders) AS t
   
31. Рассчитайте аналог Retention Rate по неделям для компаний-заказчиков. Объедините компании в когорты по неделе их первого заказа (поле order_date). Возвращение определяйте по наличию заказа в течение текущей недели. 
Перед тем как выделить неделю из даты, приведите значения к типу timestamp. Значение Retention Rate округлите до двух знаков после запятой.

WITH cohort_data AS
  (SELECT customer_id,
          DATE_TRUNC('week', order_date::timestamp) AS order_week,
          MIN(DATE_TRUNC('week', order_date::timestamp)) OVER (PARTITION BY customer_id) AS first_order_week
   FROM northwind.orders),
     
     cohort_counts AS
  (SELECT first_order_week,
          order_week,
          COUNT(DISTINCT customer_id) AS unique_customers
   FROM cohort_data
   GROUP BY first_order_week, order_week),
     
     cohort_retention AS
  (SELECT first_order_week,
          order_week,
          unique_customers,
          first_value(unique_customers) OVER (PARTITION BY first_order_week ORDER BY order_week) AS cohort_size,
          ROUND((unique_customers::numeric / first_value(unique_customers) OVER (PARTITION BY first_order_week ORDER BY order_week) * 100), 2) AS retention_rate
   FROM cohort_counts)
   
SELECT first_order_week,
       order_week,
       unique_customers,
       cohort_size,
       retention_rate
FROM cohort_retention
ORDER BY first_order_week,
         order_week,
         retention_rate
         
32. Рассчитайте аналог Retention Rate по месяцам для компаний-заказчиков. Объедините компании в когорты по месяцу их первого заказа (поле order_date). Возвращение определяйте по наличию заказа в текущем месяце. 
Перед тем как выделить неделю из даты, приведите значения к типу timestamp. Значение Retention Rate округлите до двух знаков после запятой. 

WITH cohort_data AS ( 
SELECT customer_id, 
       DATE_TRUNC('month', order_date::timestamp) AS order_month, 
       MIN(DATE_TRUNC('month', order_date::timestamp)) OVER(PARTITION BY customer_id) AS first_order_month 
FROM northwind.orders 
), 

cohort_counts AS ( 
SELECT first_order_month, 
       order_month, 
       COUNT(DISTINCT customer_id) AS unique_customers 
FROM cohort_data 
GROUP BY first_order_month, order_month 
),
 
cohort_retention AS ( 
SELECT first_order_month, 
       order_month, 
       unique_customers, 
       first_value(unique_customers) OVER (PARTITION BY first_order_month ORDER BY order_month) AS cohort_size, 
       ROUND((unique_customers::numeric / first_value(unique_customers) OVER (PARTITION BY first_order_month ORDER BY order_month) * 100), 2) AS retention_rate 
FROM cohort_counts 
)
 
SELECT first_order_month,
       order_month,
       unique_customers,
       cohort_size,
       retention_rate 
FROM cohort_retention 
ORDER BY first_order_month, order_month, retention_rate;

33. Рассчитайте аналог Retention Rate по годам для компаний-покупателей Northwind. Объедините пользователей в когорты по году их первого заказа (поле order_date). Возвращение определяйте по наличию заказа в текущем году. 
Перед тем как выделить неделю из даты, приведите значения к типу timestamp. Значение Retention Rate округлите до двух знаков после запятой.

WITH cohort_data AS ( 
SELECT customer_id, 
       DATE_TRUNC('year', order_date::timestamp) AS order_year, 
       MIN(DATE_TRUNC('year', order_date::timestamp)) OVER(PARTITION BY customer_id) AS first_order_year 
FROM northwind.orders 
) 
, 
cohort_counts AS ( 
SELECT first_order_year, 
       order_year, 
       COUNT(DISTINCT customer_id) AS unique_customers 
FROM cohort_data 
GROUP BY first_order_year, order_year 
) 
, 
cohort_retention AS ( 
SELECT first_order_year, 
       order_year, 
       unique_customers, 
       first_value(unique_customers) OVER (PARTITION BY first_order_year ORDER BY order_year) AS cohort_size, 
       ROUND((unique_customers::numeric / first_value(unique_customers) OVER (PARTITION BY first_order_year ORDER BY order_year) * 100), 2) AS retention_rate 
FROM cohort_counts 
)
 
SELECT first_order_year,
       order_year,
       unique_customers,
       cohort_size,
       retention_rate 
FROM cohort_retention 
ORDER BY first_order_year, order_year, retention_rate;

34. Для каждой компании, которая оформила хотя бы два заказа, выведите:
дату оформления второго заказа (поле order_date), округлённую до месяца;
идентификатор компании, оформившей заказ (поле customer_id).
Строки отсортируйте по значению в поле с идентификаторами в лексикографическом порядке по убыванию.


WITH rang_users AS
(SELECT *,
        RANK() OVER (PARTITION BY customer_id ORDER BY order_date) AS rn,
        LEAD(order_date) OVER (PARTITION BY customer_id ORDER BY order_date) AS next_order_dt
FROM northwind.orders
)
SELECT CAST(DATE_TRUNC('month', next_order_dt) AS date),
       customer_id
FROM rang_users 
WHERE rn=1 AND CAST(DATE_TRUNC('month', next_order_dt) AS date) IS NOT NULL
ORDER BY customer_id DESC;

35. Для каждого месяца с июля 1996 года по май 1998 года посчитайте конверсию в процентах. Найдите количество уникальных компаний-заказчиков в текущем месяце. Разделите его на общее количество компаний-заказчиков Northwind, которые оформили хотя бы один заказ за всё предыдущее время, включая текущий месяц. Под уникальностью компании в этой задаче подразумевается отсутствие повторов в выборке.
В итоговой таблице должны быть следующие поля:
- дата первого числа текущего месяца;
- количество компаний-заказчиков в текущий месяц;
- общее количество компаний-заказчиков за всё предыдущее время, включая текущий месяц;
- отношение количества покупателей за текущий месяц к общему количеству покупателей.

При делении не забудьте привести значения к вещественному типу real, тогда после деления вы получите вещественное, а не целое число. Не забудьте умножить результат на 100 и округлить значение до двух знаков после запятой. Перед округлением приведите результат в процентах к типу numeric, чтобы округление прошло без ошибок.

WITH enumerate_users AS
  (SELECT DATE_TRUNC('month', order_date)::date AS first_purchase,
          customer_id,
          ROW_NUMBER() OVER (PARTITION BY customer_id) AS rows_num
   FROM northwind.orders),
 
total_customers AS (SELECT DATE_TRUNC('month', order_date)::date AS month,
          COUNT(DISTINCT customer_id) AS customers_this_month
   FROM northwind.orders
   GROUP BY month
   ORDER BY month)
   
   SELECT month,
       customers_this_month,
  (SELECT COUNT(DISTINCT customer_id)
   FROM enumerate_users
   WHERE first_purchase <= month) AS total_customers,
       ROUND((customers_this_month::real /
                (SELECT COUNT(DISTINCT customer_id)
                 FROM enumerate_users
                 WHERE first_purchase <= month) * 100)::numeric, 2) AS conversion
FROM total_customers;